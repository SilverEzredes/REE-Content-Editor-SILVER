name: Build the app

on: push

jobs:
  release:
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0
        persist-credentials: false
        lfs: true

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore

    - name: Set outputs
      id: vars
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $env:GITHUB_OUTPUT

    - name: Publish debug build
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      run: |
        dotnet publish -c Debug --no-restore -f net8.0-windows /p:VersionSuffix=r${{ steps.vars.outputs.sha_short }} -o build ContentEditor.App/ContentEditor.App.csproj
        rm -Recurse build/runtimes/linux-*
        rm -Recurse build/runtimes/osx*
        cp -R configs build/

    - name: Publish release app
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        TAG=${{ github.ref_name }}
        dotnet publish -c Release --no-restore -f net8.0-windows /p:DebugType=none /p:DebugSymbols=false /p:VersionPrefix=${TAG#v} -o build ContentEditor.App/ContentEditor.App.csproj
        rm -Recurse build/runtimes/linux-*
        rm -Recurse build/runtimes/osx*
        cp -R configs build/

    - name: Publish release patcher
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        TAG=${{ github.ref_name }}
        dotnet publish -c Release --no-restore /p:DebugType=none /p:DebugSymbols=false /p:VersionPrefix=${TAG#v} -o build_patcher ContentPatcher/ContentPatcher.csproj
        rm -Recurse build_patcher/ImGui.NET.dll
        rm -Recurse build_patcher/runtimes/*
        cp -R configs build_patcher/

    - name: Upload artifacts
      uses: actions/upload-artifact@v4.4.3
      with:
        name: ContentEditor
        path: "build/"
        include-hidden-files: true

    - name: ZIP files for release
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        cd build/
        7z a ContentEditor.zip *
        cd ../build_patcher/
        7z a ContentPatcher.zip *
        mv ContentPatcher.zip ../build/

    - name: Upload files to release
      uses: softprops/action-gh-release@v2.2.2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: "build/*.zip"
