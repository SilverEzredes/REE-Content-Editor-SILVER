# list of resources required for a new common NPC:
# - head bake pfb (app.PartSwapTextureHolder pfb)
# -> catalog - natives/stm/appsystem/charaedit/ch000/catalog/headprebaketexturecatalog_npc.user.2
# - body bake pfb (app.PartSwapTextureHolder pfb)
# -> catalog - natives/stm/appsystem/charaedit/ch000/catalog/bodyprebaketexturecatalog_npc.user.2
# - npcart image (app.GUITextureHolder pfb) - natives/stm/appsystem/gui/prefab/textureholder/npcart/npcart_ch300002_00_00.pfb.17
# -> add to prefab list? - natives/stm/appsystem/gui/userdata/newtextureholderdata/guinpcarttextureholderdata.user.2
# - corpse image (app.GUITextureHolder pfb) - natives/stm/appsystem/gui/prefab/textureholder/corpsethumb/corpsethumb_ch300002_00.pfb.17
# -> add to prefab list? - natives/stm/appsystem/gui/userdata/newtextureholderdata/corpsethumbtextureholderdata.user.2
# - add thumbnail (app.GUITextureHolder pfb) - natives/stm/appsystem/gui/prefab/textureholder/npcthumb/npcthumb_ch300000_00_00.pfb.17
# -> add to prefab list? - natives/stm/appsystem/gui/userdata/newtextureholderdata/guinpcthumbnailtextureholderdata.user.2
# - lipsync user file - natives/stm/appsystem/ch/lipsync/npc/ch300002.pfb.17
# -> catalog - natives/stm/appsystem/catalog/maincontents/userdata/lipsynccataloguserdata.user.2
# - textures - body (ALBD, NRRA), head (ALBD, NRRA)
# - appearance and costume data (app.charaedit.ch000.EditDataTable.Data) - natives/stm/appsystem/charaedit/ch000/editdatatable_npc.user.2
# - name "Mes_{_CharacterID:enum(app.CharacterID)}" (natives/stm/message/ui/charactername.msg.22)
# TODO: how do we differentiate between main and replacement character, and do we even need to? (ch300049, ch300049_X1)
# - NPC schedule - natives/stm/appsystem/ch/ch300/userdata/npcscheduledata.user.2
# - spawn them somewhere - natives/stm/appdata/generate/manualset/content/**/npc/normal/normal.user.2

# other, maybe useless?
# natives/stm/appdata/generate/manualset/simpleglobalnpcsettable.user.2
# natives/stm/appdata/generate/manualset/simpleglobalappendnpcsettable.user.2

# open questions
# - how do the image holder pfb's get linked to?
# is it a fixed filename -> in which case why is there a user file with a list of them
# is it filtered out from the filename based on character ID? Please no.
# is there an index for the image list anywhere?

entities:
  characters.npc_data:
    enums:
    - name: app.CharacterID
      format: "{name}"
      primary: true
    custom_id_range: [1000, 999999]
    to_string: "NPC {name}: {displayName}"
    fields:
      data:
        type: object
        label: Data
        param:
          classname: app.charaedit.ch000.EditDataTable.Data
      name:
        type: string
        label: NPC internal code name
        required: true
        param:
          regex: "^ch3[0-9_]{5}$"
          regexDescription: "Example: ch302345"
          tooltip: Enter a name for the weapon ID. This should be unique across all weapons.
          initial: "{id:enum_name(app.CharacterID)}"
        display_after: start
      displayName:
        type: msg
        label: Name
        required: true
        param:
          key: "Mes_{name}"
          file: natives/stm/message/ui/charactername.msg.22

classes:
  app.charaedit.ch000.EditDataTable.Data:
    id: [_CharacterID]
    to_string: "EditDataTable Character={_CharacterID:enum(app.CharacterID)}"
    patcher:
      type: array-file
      file: natives/stm/appsystem/charaedit/ch000/editdatatable_npc.user.2

  app.facial.LipSync.Phoneme:
    to_string: "Phoneme: SoundID={_SoundMediaID}, duration={_TotalTime}"
  app.facial.LipSync.Phoneme.KeyFrame:
    to_string: "Keyframe {_Time} Vowel={_Vowel}"
  app.PartSwapTextureHolder.MaterialParam:
    to_string: "MaterialParam: {_MaterialName}.{_VariableName} = {_Texture}"
  app.DecisionPack.Decision:
    to_string: "Decision Id={_UniqueId} {_ActInterPack}"
  app.NPCSchedule:
    to_string: "NPC Schedule ID={ID:enum(app.CharacterID)} {Comments}"
  app.LipSyncCatalogUserData.PlayerElement:
    to_string: "Player Data: {_Voice:enum(app.SoundVoiceManager.PlayerVoiceType)} {_Prefab.Path}"
  app.LipSyncCatalogUserData.PawnElement:
    to_string: "Pawn Data: {_Voice:enum(app.SoundVoiceManager.PawnPersonalityType)} {_Prefab.Path}"
  app.LipSyncCatalogUserData.NPCElement:
    to_string: "Generic NPC Data: {_Voice:enum(app.CharacterData.VoiceDefine)} {_Prefab.Path}"
  app.LipSyncCatalogUserData.CharacterElement:
    to_string: "NPC Data: {_CharacterID:enum(app.CharacterID)}"
